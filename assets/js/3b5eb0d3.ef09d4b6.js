"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[409],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,g=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(g,s(s({ref:t},p),{},{components:r})):n.createElement(g,s({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},760:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},metadata:function(){return i},toc:function(){return c},default:function(){return u}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),s=["components"],l={sidebar_label:"Examples",sidebar_position:4},i={unversionedId:"get-started/smart-contracts/examples",id:"get-started/smart-contracts/examples",isDocsHomePage:!1,title:"Gear Examples",description:"You can write your own smart contract or try to build from examples. Let's Rock!",source:"@site/docs/get-started/smart-contracts/examples.md",sourceDirName:"get-started/smart-contracts",slug:"/get-started/smart-contracts/examples",permalink:"/get-started/smart-contracts/examples",editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/get-started/smart-contracts/examples.md",version:"current",sidebar_label:"Examples",sidebarPosition:4,frontMatter:{sidebar_label:"Examples",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Call Smart contracts",permalink:"/get-started/smart-contracts/send-a-transaction"},next:{title:"`cargo-program` utility",permalink:"/get-started/smart-contracts/cargo-program"}},c=[{value:"Requirements",id:"requirements",children:[]},{value:"First steps",id:"first-steps",children:[]},{value:"PING-PONG",id:"ping-pong",children:[]},{value:"Building Rust Contract",id:"building-rust-contract",children:[]}],p={toc:c};function u(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can write your own smart contract or try to build from examples. Let's Rock!"),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("p",null,"To develop your first Rust smart-contract you would have to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install Rustup:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add wasm target to your toolchain:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rustup target add wasm32-unknown-unknown\n")),(0,o.kt)("h2",{id:"first-steps"},"First steps"),(0,o.kt)("p",null,"At least 10. x ",(0,o.kt)("inlineCode",{parentName:"p"},"npm")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"node")," versions must be installed"),(0,o.kt)("p",null,"To create our app project use the command ",(0,o.kt)("strong",{parentName:"p"},"cargo"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cargo new gear-app --lib\n")),(0,o.kt)("p",null,"The project structure is following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"gear-app/\n  ---Cargo.toml\n  ---src\n  ------lib.rs\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Cargo.toml")," is a project manifest in Rust, it contains all metadata necessary for compiling the project.\nConfigure the ",(0,o.kt)("inlineCode",{parentName:"p"},"Cargo.toml")," similarly to how it is configured ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gear-tech/gear/blob/master/examples/ping/Cargo.toml"},"examples/ping/Cargo.toml"),";"),(0,o.kt)("h2",{id:"ping-pong"},"PING-PONG"),(0,o.kt)("p",null,"Gear is very easy to write code for!"),(0,o.kt)("p",null,"Here is a minimal program for a classic ping-pong contract:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'use gstd::{ext, msg};\n\n#[no_mangle]\npub unsafe extern "C" fn handle() {\n    let new_msg = String::from_utf8(msg::load()).expect("Invalid message: should be utf-8");\n\n    if &new_msg == "PING" {\n        msg::send(msg::source(), b"PONG", 10_000_000);\n    }\n}\n\n#[no_mangle]\npub unsafe extern "C" fn init() {}\n')),(0,o.kt)("p",null,"It will just send ",(0,o.kt)("inlineCode",{parentName:"p"},"PONG")," back to the original sender (this can be you!)"),(0,o.kt)("h2",{id:"building-rust-contract"},"Building Rust Contract"),(0,o.kt)("p",null,"We should compile our smart contract in the app folder:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cargo build --target wasm32-unknown-unknown --release\n")),(0,o.kt)("p",null,"Our application should compile successfully and the final file ",(0,o.kt)("inlineCode",{parentName:"p"},"target/wasm32-unknown-unknown/release/gear-app.wasm")," should appear."))}u.isMDXComponent=!0}}]);